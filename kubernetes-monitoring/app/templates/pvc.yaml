{{- if eq .Values.storageClass.provisioner "no-provisioner" }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .Release.Name }}-sc-default
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Delete
allowVolumeExpansion: false
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-pv-default
  namespace: {{ .Release.Namespace }}
  labels:
    pv: {{ .Values.pv.label }}
spec:
  capacity:
    storage: {{ .Values.pv.storage.size }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: "{{ .Release.Name }}-sc-default"
  local:
    path: {{ .Values.pv.path }}
  {{- if eq .Values.pv.nodeAffinity true }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
  {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pvc-default
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      pv: {{ .Values.pv.label }}
  storageClassName: "{{ .Release.Name }}-sc-default"
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.pvc.storage.request_size }}
{{ else if eq .Values.storageClass.provisioner "minikube-hostpath" }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .Release.Name }}-sc-hostpath
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pvc-default
  namespace: {{ .Release.Namespace }}
spec:
  selector:
  storageClassName: "{{ .Release.Name }}-sc-hostpath"
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.pvc.storage.request_size }}
{{ else }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .Release.Name }}-sc-hostpath
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pvc-default
  namespace: {{ .Release.Namespace }}
spec:
  selector:
  storageClassName: "{{ .Release.Name }}-sc-hostpath"
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.pvc.storage.request_size }}
{{- end }}



